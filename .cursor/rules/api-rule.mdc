---
description:
globs:
alwaysApply: false
---
后端API文档,需要实现以下功能:
1. 认证相关接口

1.1 用户注册
- 功能: 注册新用户
- 请求方法: POST
- 请求路径: /api/auth/register
- 请求体: 
JSON
{
  "username": "string",  // 用户名，长度3-20
  "password": "string",  // 密码，长度不少于6位
  "email": "string",     // 邮箱，格式正确
  "verificationCode": "string"  // 验证码，6位数字
}
- 成功响应: 
•状态码: 200
•响应体: "注册成功"
- 错误响应: 
•状态码: 400
•响应体: "用户名不能为空" 或 "密码长度不能少于6位" 等验证错误信息
•状态码: 500
•响应体: 服务器内部错误信息
1.2 发送验证码
- 功能: 向指定邮箱发送验证码
- 请求方法: POST
- 请求路径: /api/auth/send-code
- 请求体: 
JSON
{
  "email": "string"  // 邮箱，格式正确
}
- 成功响应: 
•状态码: 200
•响应体: "验证码已发送至您的邮箱，请注意查收"
- 错误响应: 
•状态码: 400
•响应体: "邮箱不能为空" 或 "邮箱格式不正确"
•状态码: 500
•响应体: "邮件发送失败，请稍后重试"
1.3 用户通过邮箱登录
- 功能: 用户登录获取token
- 请求方法: POST
- 请求路径: /api/auth/login
- 请求体: 
JSON
{
  "email": "string",    // 邮箱
  "password": "string"  // 密码
}
- 成功响应: 
•状态码: 200
•响应体: 
JSON
{
  "token": "string",   // 用户token
  "username": "string"  // 用户名
}
- 错误响应: 
•状态码: 400
•响应体: "邮箱不能为空" 或 "密码不能为空"
•状态码: 401
•响应体: "认证失败，邮箱或密码错误"
1.4 用户通过用户名登录
- 功能: 用户登录获取token
- 请求方法: POST
- 请求路径: /api/auth/login_by_username
- 请求体: 
JSON
{
  "username": "string",    // 用户名
  "password": "string"  // 密码
}
- 成功响应: 
•状态码: 200
•响应体: 
JSON
{
  "token": "string",   // 用户token
  "username": "string"  // 用户名
}
- 错误响应: 
•状态码: 400
•响应体: "用户名不能为空" 或 "密码不能为空"
•状态码: 401
•响应体: "认证失败，用户名或密码错误"

1.5 用户登出
- 功能: 用户登出
- 请求方法: POST
- 请求路径: /api/auth/logout
- 请求参数: 无
- 请求头: 可选携带Authorization: Bearer {token}
- 成功响应: 
•状态码: 200
•响应体: "登出成功"
- 错误响应: 
•状态码: 500
•响应体: 服务器内部错误信息
2. 数据相关接口

2.1 获取仪表盘统计数据
- 功能: 获取交通统计信息
- 请求方法: GET
- 请求路径: /api/dashboard/stats
- 请求参数: 无
- 成功响应: 
•状态码: 200
•响应体: 
JSON
{
  "success": true,
  "data": {
    "congestionLevel": "string",  // 拥挤级别
    "congestedSections": number,   // 拥挤路段数量
  }
}
- 错误响应: 
•状态码: 500
•响应体: 服务器内部错误信息
2.2 获取热力图数据
- 功能: 获取交通热度分布数据
- 请求方法: GET
- 请求路径: /api/map/heatmap
- 请求参数: 无
- 成功响应: 
•状态码: 200
•响应体: 
JSON
{
  "success": true,
  "data": [
    {
      "lat": number,      // 纬度
      "lng": number,      // 经度
      "intensity": number  // 热度强度
    },
    ...
  ]
}
- 错误响应: 
•状态码: 500
•响应体: 服务器内部错误信息
2.3 获取拥挤度数据
- 功能: 获取不同区域的拥挤程度
- 请求方法: GET
- 请求路径: /api/map/congestion
- 请求参数: 无
- 成功响应: 
•状态码: 200
•响应体: 
JSON
{
  "success": true,
  "data": {
    "regions": [
      {
        "level": "string", // 拥挤级别
        "value": number     // 拥挤度值
      },
      ...
    ],
    "updateTime": "string"  // 更新时间
  }
}
- 错误响应: 
•状态码: 500
•响应体: 服务器内部错误信息
3. 路线规划接口

3.1 规划路线
- 功能: 根据起点终点和路线偏好规划路线
- 请求方法: POST
- 请求路径: /api/routes/plan
- 请求体: 
JSON
{
  "startLat": number,    // 起点纬度
  "startLng": number,    // 起点经度
  "endLat": number,      // 终点纬度
  "endLng": number,      // 终点经度
  "routeType": "string"  // 路线类型: fastest(最快), shortest(最短), avoidingTraffic(避堵)
}
- 成功响应: 
•状态码: 200
•响应体: 
JSON
{
  "points": [
    {
      "lat": number,  // 纬度
      "lng": number   // 经度
    },
    ...
  ],
  "totalDistance": number,  // 总距离(公里)
  "totalTime": number,      // 总时间(分钟)
  "routeType": "string"    // 路线类型
}
- 错误响应: 
•状态码: 400
•响应体: "起点纬度不能为空" 或 "起点经度不能为空" 等验证错误信息
•状态码: 500
•响应体: 服务器内部错误信息
4. 用户信息相关接口

4.1 获取当前用户认证信息
•功能: 基于请求头中的Token获取用户认证信息
•请求方法: GET
•请求路径: /api/user/auth
•请求头: 
•Authorization: Bearer {token}
•成功响应: 
•状态码: 200
•响应体: 
JSON
{
  "success": true,
  "data": {
    "username": "string",  // 用户名
    "email": "string",     // 邮箱
    "role": "string",      // 角色
  }
}
•错误响应: 
•状态码: 401
•响应体: "无效的token" 或 "token已过期"
•状态码: 500
•响应体: 服务器内部错误信息

4.2 修改当前用户认证信息
•功能: 修改用户认证信息，支持修改邮箱和密码
•请求方法: PUT
•请求路径: /api/user/auth
•请求头: 
•Authorization: Bearer {token}
•请求体: 
JSON
{
  "email": "string",    // 邮箱(可选)
  "password": "string"  // 密码(可选)
}
•成功响应: 
•状态码: 200
•响应体: 
JSON
{
  "success": true,
  "message": "用户信息更新成功。"
}
•错误响应: 
•状态码: 400
•响应体: "邮箱格式不正确" 或 "密码长度不能少于6位"
•状态码: 401
•响应体: "无效的token" 或 "token已过期"
•状态码: 500
•响应体: 服务器内部错误信息

4.3 获取当前用户个人资料
•功能: 获取用户个人资料信息
•请求方法: GET
•请求路径: /api/user/profile
•请求头: 
•Authorization: Bearer {token}
•成功响应: 
•状态码: 200
•响应体: 
JSON
{
  "success": true,
  "data": {
    "name": "string",       // 姓名
    "phoneNumber": "string"  // 电话号码
......
  }
}

•错误响应: 
•状态码: 401
•响应体: "无效的token" 或 "token已过期"
•状态码: 500
•响应体: 服务器内部错误信息

4.4 修改当前用户个人资料
•功能: 修改用户个人资料信息
•请求方法: PUT
•请求路径: /api/user/profile
•请求头: 
•Authorization: Bearer {token}
•请求体: 
JSON
{
  "name": "string",       // 姓名(可选)
  "phoneNumber": "string"  // 电话号码(可选)
......
}
•成功响应: 
•状态码: 200
•响应体: 
JSON
{
  "success": true,
  "message": "用户个人资料更新成功。"
}
•错误响应: 
•状态码: 400
•响应体: "姓名不能为空" 或 "电话号码格式不正确"
•状态码: 401
•响应体: "无效的token" 或 "token已过期"
￮状态码: 500
￮响应体: 服务器内部错误信息
